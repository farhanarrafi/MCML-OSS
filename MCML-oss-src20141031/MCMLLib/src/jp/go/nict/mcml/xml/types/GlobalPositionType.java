/**
 * GlobalPositionType.java
 *
 * This file was generated by XMLSPY 2004 Enterprise Edition.
 *
 * YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
 *
 * Refer to the XMLSPY Documentation for further details.
 * http://www.altova.com/xmlspy
 */


package jp.go.nict.mcml.xml.types;

import jp.go.nict.mcml.xml.altova.types.*;

public class GlobalPositionType extends jp.go.nict.mcml.xml.altova.xml.Node {
	public GlobalPositionType() {
		super();
	}

	public GlobalPositionType(GlobalPositionType node) {
		super(node);
	}

	public GlobalPositionType(org.w3c.dom.Node node) {
		super(node);
	}

	public GlobalPositionType(org.w3c.dom.Document doc) {
		super(doc);
	}
	public void adjustPrefix() {
		int count;
		count = getDomChildCount(Attribute, null, "Longitude");
		for (int i = 0; i < count; i++) {
			org.w3c.dom.Node tmpNode = getDomChildAt(Attribute, null, "Longitude", i);
			internalAdjustPrefix(tmpNode, false);
		}
		count = getDomChildCount(Attribute, null, "Latitude");
		for (int i = 0; i < count; i++) {
			org.w3c.dom.Node tmpNode = getDomChildAt(Attribute, null, "Latitude", i);
			internalAdjustPrefix(tmpNode, false);
		}
	}

	public int getLongitudeMinCount() {
		return 1;
	}

	public int getLongitudeMaxCount() {
		return 1;
	}

	public int getLongitudeCount() {
		return getDomChildCount(Attribute, null, "Longitude");
	}

	public boolean hasLongitude() {
		return hasDomChild(Attribute, null, "Longitude");
	}

	public SchemaFloat getLongitudeAt(int index) throws Exception {
		return new SchemaFloat(getDomNodeValue(getDomChildAt(Attribute, null, "Longitude", index)));
	}

	public SchemaFloat getLongitude() throws Exception {
		return getLongitudeAt(0);
	}

	public void removeLongitudeAt(int index) {
		removeDomChildAt(Attribute, null, "Longitude", index);
	}

	public void removeLongitude() {
		while (hasLongitude())
			removeLongitudeAt(0);
	}

	public void addLongitude(SchemaFloat value) {
		appendDomChild(Attribute, null, "Longitude", value.toString());
	}

	public void addLongitude(String value) throws Exception {
		addLongitude(new SchemaFloat(value));
	}

	public void insertLongitudeAt(SchemaFloat value, int index) {
		insertDomChildAt(Attribute, null, "Longitude", index, value.toString());
	}

	public void insertLongitudeAt(String value, int index) throws Exception {
		insertLongitudeAt(new SchemaFloat(value), index);
	}

	public void replaceLongitudeAt(SchemaFloat value, int index) {
		replaceDomChildAt(Attribute, null, "Longitude", index, value.toString());
	}

	public void replaceLongitudeAt(String value, int index) throws Exception {
		replaceLongitudeAt(new SchemaFloat(value), index);
	}

	public int getLatitudeMinCount() {
		return 1;
	}

	public int getLatitudeMaxCount() {
		return 1;
	}

	public int getLatitudeCount() {
		return getDomChildCount(Attribute, null, "Latitude");
	}

	public boolean hasLatitude() {
		return hasDomChild(Attribute, null, "Latitude");
	}

	public SchemaFloat getLatitudeAt(int index) throws Exception {
		return new SchemaFloat(getDomNodeValue(getDomChildAt(Attribute, null, "Latitude", index)));
	}

	public SchemaFloat getLatitude() throws Exception {
		return getLatitudeAt(0);
	}

	public void removeLatitudeAt(int index) {
		removeDomChildAt(Attribute, null, "Latitude", index);
	}

	public void removeLatitude() {
		while (hasLatitude())
			removeLatitudeAt(0);
	}

	public void addLatitude(SchemaFloat value) {
		appendDomChild(Attribute, null, "Latitude", value.toString());
	}

	public void addLatitude(String value) throws Exception {
		addLatitude(new SchemaFloat(value));
	}

	public void insertLatitudeAt(SchemaFloat value, int index) {
		insertDomChildAt(Attribute, null, "Latitude", index, value.toString());
	}

	public void insertLatitudeAt(String value, int index) throws Exception {
		insertLatitudeAt(new SchemaFloat(value), index);
	}

	public void replaceLatitudeAt(SchemaFloat value, int index) {
		replaceDomChildAt(Attribute, null, "Latitude", index, value.toString());
	}

	public void replaceLatitudeAt(String value, int index) throws Exception {
		replaceLatitudeAt(new SchemaFloat(value), index);
	}
}
