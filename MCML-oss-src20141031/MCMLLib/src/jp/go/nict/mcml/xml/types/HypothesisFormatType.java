/**
 * HypothesisFormatType.java
 *
 * This file was generated by XMLSPY 2004 Enterprise Edition.
 *
 * YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
 *
 * Refer to the XMLSPY Documentation for further details.
 * http://www.altova.com/xmlspy
 */


package jp.go.nict.mcml.xml.types;

import jp.go.nict.mcml.xml.altova.types.*;

public class HypothesisFormatType extends jp.go.nict.mcml.xml.altova.xml.Node {
	public HypothesisFormatType() {
		super();
	}

	public HypothesisFormatType(HypothesisFormatType node) {
		super(node);
	}

	public HypothesisFormatType(org.w3c.dom.Node node) {
		super(node);
	}

	public HypothesisFormatType(org.w3c.dom.Document doc) {
		super(doc);
	}
	public void adjustPrefix() {
		int count;
		count = getDomChildCount(Attribute, null, "NofN-best");
		for (int i = 0; i < count; i++) {
			org.w3c.dom.Node tmpNode = getDomChildAt(Attribute, null, "NofN-best", i);
			internalAdjustPrefix(tmpNode, false);
		}
	}

	public int getNofN_bestMinCount() {
		return 1;
	}

	public int getNofN_bestMaxCount() {
		return 1;
	}

	public int getNofN_bestCount() {
		return getDomChildCount(Attribute, null, "NofN-best");
	}

	public boolean hasNofN_best() {
		return hasDomChild(Attribute, null, "NofN-best");
	}

	public SchemaString getNofN_bestAt(int index) throws Exception {
		return new SchemaString(getDomNodeValue(getDomChildAt(Attribute, null, "NofN-best", index)));
	}

	public SchemaString getNofN_best() throws Exception {
		return getNofN_bestAt(0);
	}

	public void removeNofN_bestAt(int index) {
		removeDomChildAt(Attribute, null, "NofN-best", index);
	}

	public void removeNofN_best() {
		while (hasNofN_best())
			removeNofN_bestAt(0);
	}

	public void addNofN_best(SchemaString value) {
		appendDomChild(Attribute, null, "NofN-best", value.toString());
	}

	public void addNofN_best(String value) throws Exception {
		addNofN_best(new SchemaString(value));
	}

	public void insertNofN_bestAt(SchemaString value, int index) {
		insertDomChildAt(Attribute, null, "NofN-best", index, value.toString());
	}

	public void insertNofN_bestAt(String value, int index) throws Exception {
		insertNofN_bestAt(new SchemaString(value), index);
	}

	public void replaceNofN_bestAt(SchemaString value, int index) {
		replaceDomChildAt(Attribute, null, "NofN-best", index, value.toString());
	}

	public void replaceNofN_bestAt(String value, int index) throws Exception {
		replaceNofN_bestAt(new SchemaString(value), index);
	}
}
