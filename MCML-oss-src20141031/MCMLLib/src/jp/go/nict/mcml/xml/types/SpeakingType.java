/**
 * SpeakingType.java
 *
 * This file was generated by XMLSPY 2004 Enterprise Edition.
 *
 * YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
 *
 * Refer to the XMLSPY Documentation for further details.
 * http://www.altova.com/xmlspy
 */


package jp.go.nict.mcml.xml.types;

import jp.go.nict.mcml.xml.altova.types.*;

public class SpeakingType extends jp.go.nict.mcml.xml.altova.xml.Node {
	public SpeakingType() {
		super();
	}

	public SpeakingType(SpeakingType node) {
		super(node);
	}

	public SpeakingType(org.w3c.dom.Node node) {
		super(node);
	}

	public SpeakingType(org.w3c.dom.Document doc) {
		super(doc);
	}
	public void adjustPrefix() {
		int count;
		count = getDomChildCount(Element, null, "Language");
		for (int i = 0; i < count; i++) {
			org.w3c.dom.Node tmpNode = getDomChildAt(Element, null, "Language", i);
			internalAdjustPrefix(tmpNode, true);
			new LanguageType(tmpNode).adjustPrefix();
		}
	}

	public int getLanguageMinCount() {
		return 1;
	}

	public int getLanguageMaxCount() {
		return 1;
	}

	public int getLanguageCount() {
		return getDomChildCount(Element, null, "Language");
	}

	public boolean hasLanguage() {
		return hasDomChild(Element, null, "Language");
	}

	public LanguageType getLanguageAt(int index) throws Exception {
		return new LanguageType(getDomChildAt(Element, null, "Language", index));
	}

	public LanguageType getLanguage() throws Exception {
		return getLanguageAt(0);
	}

	public void removeLanguageAt(int index) {
		removeDomChildAt(Element, null, "Language", index);
	}

	public void removeLanguage() {
		while (hasLanguage())
			removeLanguageAt(0);
	}

	public void addLanguage(LanguageType value) {
		appendDomElement(null, "Language", value);
	}

	public void insertLanguageAt(LanguageType value, int index) {
		insertDomElementAt(null, "Language", index, value);
	}

	public void replaceLanguageAt(LanguageType value, int index) {
		replaceDomElementAt(null, "Language", index, value);
	}
}
