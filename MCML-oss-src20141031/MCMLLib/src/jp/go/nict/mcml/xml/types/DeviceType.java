/**
 * DeviceType.java
 *
 * This file was generated by XMLSPY 2004 Enterprise Edition.
 *
 * YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
 *
 * Refer to the XMLSPY Documentation for further details.
 * http://www.altova.com/xmlspy
 */


package jp.go.nict.mcml.xml.types;

import jp.go.nict.mcml.xml.altova.types.*;

public class DeviceType extends jp.go.nict.mcml.xml.altova.xml.Node {
	public DeviceType() {
		super();
	}

	public DeviceType(DeviceType node) {
		super(node);
	}

	public DeviceType(org.w3c.dom.Node node) {
		super(node);
	}

	public DeviceType(org.w3c.dom.Document doc) {
		super(doc);
	}
	public void adjustPrefix() {
		int count;
		count = getDomChildCount(Element, null, "Location");
		for (int i = 0; i < count; i++) {
			org.w3c.dom.Node tmpNode = getDomChildAt(Element, null, "Location", i);
			internalAdjustPrefix(tmpNode, true);
			new LocationType(tmpNode).adjustPrefix();
		}
	}

	public int getLocationMinCount() {
		return 1;
	}

	public int getLocationMaxCount() {
		return 1;
	}

	public int getLocationCount() {
		return getDomChildCount(Element, null, "Location");
	}

	public boolean hasLocation() {
		return hasDomChild(Element, null, "Location");
	}

	public LocationType getLocationAt(int index) throws Exception {
		return new LocationType(getDomChildAt(Element, null, "Location", index));
	}

	public LocationType getLocation() throws Exception {
		return getLocationAt(0);
	}

	public void removeLocationAt(int index) {
		removeDomChildAt(Element, null, "Location", index);
	}

	public void removeLocation() {
		while (hasLocation())
			removeLocationAt(0);
	}

	public void addLocation(LocationType value) {
		appendDomElement(null, "Location", value);
	}

	public void insertLocationAt(LocationType value, int index) {
		insertDomElementAt(null, "Location", index, value);
	}

	public void replaceLocationAt(LocationType value, int index) {
		replaceDomElementAt(null, "Location", index, value);
	}
}
