////////////////////////////////////////////////////////////////////////
//
// Doc.h
//
// This file was generated by XMLSPY 2004 Enterprise Edition.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the XMLSPY Documentation for further details.
// http://www.altova.com/xmlspy
//
////////////////////////////////////////////////////////////////////////

#ifndef MCML_DOC_H_INCLUDED
#define MCML_DOC_H_INCLUDED

#include <libxml/parser.h>

namespace mcml {


class CNode;


class CDoc : public CBaseObject
{
public:
	static xmlDocPtr	GetDocument();
	static xmlNodePtr	CreateFragment(xmlNodePtr pDOMNode = NULL);
	static void			ReleaseFragment(xmlNodePtr pDOMNode);

	static void			AddReferenceCount();
	static void			DeleteReferenceCount();

protected:
	static xmlDocPtr	sm_Document;
	static xmlNodePtr	sm_Fragment;
	static int			sm_nReferenceCounter;

public:
	CDoc();
	virtual ~CDoc();

	xmlNodePtr Load(const tstring& sURI);
	void Save(const tstring& sURI, CNode& rNode);

	void SetEncoding(const tstring& sEncoding);
	void SetRootElementName(const tstring& sNamespaceURI, const tstring& sName);
	void SetSchemaLocation(const tstring& sSchemaLocation);
	void SetDTDLocation(const tstring& sSchemaLocation);
	void RemoveSchemaLocation();

	xmlNodePtr Parse(const tstring& sXmlData);
	tstring Generate(CNode& rNode);


protected:
	void FinalizeRootElement(CNode& rNode);

protected:
	typedef enum
	{
		None,
		DTD,
		Schema
	} ESchemaType;

	tstring		m_sEncoding;
	tstring		m_sRootElementName;
	tstring		m_sRootElementNamespaceURI;
	tstring		m_sSchemaLocation;
	ESchemaType	m_eSchemaType;
};


} // namespace mcml

#endif // MCML_DOC_H_INCLUDED
